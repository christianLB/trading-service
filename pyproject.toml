[tool.poetry]
name = "trading-service"
version = "0.1.0"
description = "Deterministic trading microservice with risk management"
authors = ["k2600x"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.9.0"
pydantic-settings = "^2.5.0"
sqlalchemy = "^2.0.0"
psycopg = {extras = ["binary", "pool"], version = "^3.2.0"}
asyncpg = "^0.29.0"
alembic = "^1.13.0"
redis = "^5.1.0"
httpx = "^0.27.0"
prometheus-client = "^0.21.0"
structlog = "^24.4.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
black = "^24.0.0"
ruff = "^0.6.0"
mypy = "^1.11.0"
faker = "^30.0.0"
aiosqlite = "^0.21.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
show_error_codes = true
warn_no_return = true
warn_unused_ignores = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short --strict-markers"